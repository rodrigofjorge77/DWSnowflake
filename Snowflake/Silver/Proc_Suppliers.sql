USE SCHEMA DW.SILVER;

CREATE OR REPLACE PROCEDURE SILVER_SUPPLIERS()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
	
    create TABLE IF NOT EXISTS DW.SILVER.SUPPLIERS (
        SUPPLIER_ID NUMBER(38,0) NOT NULL,
        COMPANY_NAME VARCHAR(40) NOT NULL,
        CONTACT_NAME VARCHAR(30),
        CONTACT_TITLE VARCHAR(30),
        ADDRESS VARCHAR(60),
        CITY VARCHAR(15),
        REGION VARCHAR(15),
        POSTAL_CODE VARCHAR(10),
        COUNTRY VARCHAR(15),
        PHONE VARCHAR(24),
        FAX VARCHAR(24),
        HOMEPAGE VARCHAR(16777216),
        DATA_EXTRACAO DATE
    );

	TRUNCATE TABLE DW.SILVER.SUPPLIERS;

    -- Inicia uma transação
    BEGIN TRANSACTION;

    -- Insere os dados transformados na tabela DW.SILVER.CATEGORIES
    INSERT INTO DW.SILVER.SUPPLIERS (SUPPLIER_ID,COMPANY_NAME,CONTACT_NAME,CONTACT_TITLE,ADDRESS,CITY,REGION, POSTAL_CODE, COUNTRY, PHONE, FAX, HOMEPAGE,DATA_EXTRACAO)       
    SELECT COALESCE(SUPPLIER_ID,-1), 
        UPPER(COALESCE(COMPANY_NAME,'NA')), 
        UPPER(COALESCE(CONTACT_NAME,'NA')), 
        UPPER(COALESCE(CONTACT_TITLE,'NA')), 
        UPPER(COALESCE(ADDRESS,'NA')), 
        UPPER(COALESCE(CITY,'NA')), 
        UPPER(COALESCE(REGION,'NA')), 
        UPPER(COALESCE(POSTAL_CODE,'NA')), 
        UPPER(COALESCE(COUNTRY,'NA')), 
        UPPER(COALESCE(PHONE,'NA')), 
        UPPER(COALESCE(FAX,'NA')), 
        UPPER(COALESCE(HOMEPAGE,'NA')), 
        DATA_EXTRACAO
    FROM DW.BRONZE.SUPPLIERS;

    -- Finaliza a transação
    COMMIT;

    RETURN 'Dados transferidos e transformados com sucesso';

EXCEPTION
    WHEN OTHER THEN
        -- Em caso de erro, realiza o rollback
        ROLLBACK;
        RETURN 'Erro durante a execução da procedure.';    

END;
$$;

CALL SILVER_SUPPLIERS();

