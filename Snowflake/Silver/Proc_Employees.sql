USE SCHEMA DW.SILVER;

CREATE OR REPLACE PROCEDURE SILVER_EMPLOYEES()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
	
    create TABLE IF NOT EXISTS DW.SILVER.EMPLOYEES (
        EMPLOYEE_ID NUMBER(38,0) NOT NULL,
        LAST_NAME VARCHAR(20) NOT NULL,
        FIRST_NAME VARCHAR(10) NOT NULL,
        TITLE VARCHAR(30),
        TITLE_OF_COURTESY VARCHAR(25),
        BIRTH_DATE DATE,
        HIRE_DATE DATE,
        ADDRESS VARCHAR(60),
        CITY VARCHAR(15),
        REGION VARCHAR(15),
        POSTAL_CODE VARCHAR(10),
        COUNTRY VARCHAR(15),
        HOME_PHONE VARCHAR(24),
        EXTENSION VARCHAR(4),
        NOTES VARCHAR(16777216),
        REPORTS_TO NUMBER(38,0),
        PHOTO_PATH VARCHAR(255),
        DATA_EXTRACAO DATE
    );

	TRUNCATE TABLE DW.SILVER.EMPLOYEES;

     -- Inicia uma transação
    BEGIN TRANSACTION;

    -- Insere os dados transformados na tabela DW.SILVER.CATEGORIES
    INSERT INTO DW.SILVER.EMPLOYEES (EMPLOYEE_ID, LAST_NAME, FIRST_NAME, TITLE, TITLE_OF_COURTESY, BIRTH_DATE, HIRE_DATE, ADDRESS, CITY, REGION, POSTAL_CODE, COUNTRY, HOME_PHONE, EXTENSION, NOTES, REPORTS_TO, PHOTO_PATH, DATA_EXTRACAO)    
    SELECT EMPLOYEE_ID, 
        UPPER(COALESCE(LAST_NAME, 'NA')), 
        UPPER(COALESCE(FIRST_NAME, 'NA')), 
        UPPER(COALESCE(TITLE, 'NA')), 
        UPPER(COALESCE(TITLE_OF_COURTESY, 'NA')), 
        COALESCE(BIRTH_DATE,'1901-01-01'), 
        COALESCE(HIRE_DATE,'1901-01-01'), 
        UPPER(COALESCE(ADDRESS, 'NA')), 
        UPPER(COALESCE(CITY, 'NA')),
        UPPER(COALESCE(REGION, 'NA')),
        UPPER(COALESCE(POSTAL_CODE, 'NA')),
        UPPER(COALESCE(COUNTRY, 'NA')),
        UPPER(COALESCE(HOME_PHONE, 'NA')),
        UPPER(COALESCE(EXTENSION, 'NA')), 
        UPPER(COALESCE(NOTES, 'NA')), 
        COALESCE(REPORTS_TO, '-1'),
        UPPER(COALESCE(PHOTO_PATH,'NA')), 
        DATA_EXTRACAO
    FROM DW.BRONZE.EMPLOYEES;

    -- Finaliza a transação
    COMMIT;

    RETURN 'Dados transferidos e transformados com sucesso';

EXCEPTION
    WHEN OTHER THEN
        -- Em caso de erro, realiza o rollback
        ROLLBACK;
        RETURN 'Erro durante a execução da procedure.';    

END;
$$;

CALL SILVER_EMPLOYEES();

